<html><title>Phoenix SNAPSHOT Performance</title><head><style type="text/css">table.myTable { border-collapse:collapse; } table.myTable tr { padding:5px;} table.myTable td, table.myTable th { font-size:9px; } </style></head><body style="font-family:verdana;"><font size=5 color='#448899'>Phoenix Performance Result :: Mon Feb 03 13:38:20 PST 2014</font><br><hr><font size=5 color='#333355'><b>Queries by Category</b></font><br><br><hr><font size=4 color='#333355'><b>Aggregation</b></font><br><br><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select count(1) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> group by HOST<br></td></tr><tr><td><font size=1 color='black'>select core, count(1) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> group by CORE<br></td></tr><tr><td><font size=1 color='black'>select core, host, sum(ACTIVE_VISITOR) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> group by core, host<br></td></tr><tr><td><font size=1 color='black'>select AVG(DB), MIN(CORE), MAX(ACTIVE_VISITOR) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> where host='CS' and DOMAIN<>'Google.com'<br></td></tr><tr><td><font size=1 color='black'>select round(date, 'day',50), sum(core)+2 from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> where (CORE<10 or CORE>90) group by round(date, 'day',50), host<br></td></tr><tr><td><font size=1 color='black'>select trunc(date, 'hour', 1000), count(DB), count(ACTIVE_VISITOR) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> where feature='Login' and (core<50 or db<20 or active_visitor > 200) group by trunc(date, 'hour', 1000)<br></td></tr><tr><td><font size=1 color='black'>select count(active_visitor) count from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select count(distinct active_visitor) count from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select count(core), count(db), count(active_visitor) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select core, count(db) count from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> group by CORE<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> where core < 10 and active_visitor < 1000<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> where core > 90<br></td></tr></table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#WIDE_PK'>WIDE_PK</a><br></td></tr></table><hr><font size=4 color='#333355'><b>Aggregation with filter no non-pk</b></font><br><br><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_6CF'>TABLE_6CF</a> where f < 10000<br></td></tr></table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_1CF'>TABLE_1CF</a> where f < 10000<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#WIDE_PK'>WIDE_PK</a> where column2<10<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#WIDE_PK'>WIDE_PK</a> where column2<50 and column3<50 and column4<50 and column5<50<br></td></tr></table><hr><font size=4 color='#333355'><b>ColumnFamilies-Single</b></font><br><br><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from <a href='#TABLE_6CF'>TABLE_6CF</a> where K1 in ('A', 'B', 'C', 'D')<br></td></tr><tr><td><font size=1 color='black'>select count(1) from <a href='#TABLE_6CF'>TABLE_6CF</a> where K1 in ('A', 'C')<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_6CF'>TABLE_6CF</a> where f < 1000<br></td></tr><tr><td><font size=1 color='black'>select a,b,c,d,e,f from <a href='#TABLE_6CF'>TABLE_6CF</a> where B>1000 and B<2000 and f>1000 and f<2000<br></td></tr><tr><td><font size=1 color='black'>select sum(a),sum(b),sum(c),sum(d) from <a href='#TABLE_6CF'>TABLE_6CF</a> group by K1<br></td></tr></table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from <a href='#TABLE_1CF'>TABLE_1CF</a> where K1 in ('A', 'B', 'C', 'D')<br></td></tr><tr><td><font size=1 color='black'>select count(1) from <a href='#TABLE_1CF'>TABLE_1CF</a> where K1 in ('A', 'C')<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_1CF'>TABLE_1CF</a> where f < 1000<br></td></tr><tr><td><font size=1 color='black'>select a,b,c,d,e,f from <a href='#TABLE_1CF'>TABLE_1CF</a> where B>1000 and B<2000 and f>1000 and f<2000<br></td></tr><tr><td><font size=1 color='black'>select sum(a),sum(b),sum(c),sum(d) from <a href='#TABLE_1CF'>TABLE_1CF</a> group by K1<br></td></tr></table><table class="myTable"</table><hr><font size=4 color='#333355'><b>Count Distinct</b></font><br><br><table class="myTable"<tr><td><font size=1 color='black'>select count(distinct core), count(distinct db), count(distinct active_visitor) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select core, count(distinct db) count from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> group by CORE<br></td></tr></table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><hr><font size=4 color='#333355'><b>IN/LIKE Clause</b></font><br><br><table class="myTable"<tr><td><font size=1 color='black'>select count(core) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> where core IN (1,25,50,75,100)<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from <a href='#IN_LIKE_TABLE'>IN_LIKE_TABLE</a> where K1 in ('Z', 'D', 'F', 'X')<br></td></tr><tr><td><font size=1 color='black'>select * from <a href='#IN_LIKE_TABLE'>IN_LIKE_TABLE</a> where K1 in ('A','B') and K2 in ('xxx1000000','xxx2000000','xxx2000001')<br></td></tr><tr><td><font size=1 color='black'>select * from <a href='#IN_LIKE_TABLE'>IN_LIKE_TABLE</a> where K1 in ('A', 'C', 'E', 'F', 'H') and K2 like 'xxxxxx1%'<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#IN_LIKE_TABLE'>IN_LIKE_TABLE</a> where K1 in ('X','A','B','C','D','E','F','G','H','I','Z') and K2 like '%1%'<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#IN_LIKE_TABLE'>IN_LIKE_TABLE</a> where (K1 in ('A','E','F','G','H','I','Z') or K1 like 'E%') and (K2 like '%xx1%' or K2 like '%xxxxxx2%')<br></td></tr></table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><hr><font size=4 color='#333355'><b>Index</b></font><br><br><table class="myTable"</table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  idx1 idx2 idx3 idx4) */ count(*) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  ids1 ids2 ids3 ids4) */ count(*) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(*) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select round(date, 'day',50), sum(core)+2 from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where (CORE<10 or CORE>90) group by round(date, 'day',50), host<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ round(date, 'day',50), sum(core)+2 from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where (CORE<10 or CORE>90) group by round(date, 'day',50), host<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  idx1 idx2 idx3 idx4) */ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  ids1 ids2 ids3 ids4) */ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  idx1 idx2 idx3 idx4) */ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  ids1 ids2 ids3 ids4) */ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  idx1 idx2 idx3 idx4) */ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(<a href='#INDEXED_TABLE'>INDEXED_TABLE</a>  ids1 ids2 ids3 ids4) */ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core < 100 and db < 2000<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core < 100 and db < 2000<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core > 90<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core > 90<br></td></tr><tr><td><font size=1 color='black'>select count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core > 0<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where core > 0<br></td></tr><tr><td><font size=1 color='black'>select db from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where db >5 and db <7 order by db<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ db from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> where db >5 and db <7 order by db<br></td></tr><tr><td><font size=1 color='black'>select db from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> order by db limit 10<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ db from <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> order by db limit 10<br></td></tr></table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><hr><font size=4 color='#333355'><b>Index Creation After Data</b></font><br><br><table class="myTable"</table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>CREATE INDEX idx5 ON <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> (CORE) INCLUDE (DB,ACTIVE_VISITOR)<br></td></tr></table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><hr><font size=4 color='#333355'><b>Large Group By</b></font><br><br><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_6CF'>TABLE_6CF</a> group by A<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_6CF'>TABLE_6CF</a> group by B<br></td></tr></table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_1CF'>TABLE_1CF</a> group by A<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#TABLE_1CF'>TABLE_1CF</a> group by B<br></td></tr></table><table class="myTable"</table><hr><font size=4 color='#333355'><b>Load Data</b></font><br><br><table class="myTable"<tr><td><font size=1 color='black'>LOAD DATA <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> [2000000 ROWS]<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>LOAD DATA <a href='#IN_LIKE_TABLE'>IN_LIKE_TABLE</a> [2000000 ROWS]<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>LOAD DATA <a href='#INDEXED_TABLE'>INDEXED_TABLE</a> [2000000 ROWS]<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>LOAD DATA <a href='#TABLE_6CF'>TABLE_6CF</a> [2000000 ROWS]<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>LOAD DATA <a href='#SALTED_TABLE'>SALTED_TABLE</a> [2000000 ROWS]<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>LOAD DATA <a href='#TABLE_1CF'>TABLE_1CF</a> [2000000 ROWS]<br></td></tr></table><table class="myTable"<tr><td><font size=1 color='black'>LOAD DATA <a href='#WIDE_PK'>WIDE_PK</a> [2000000 ROWS]<br></td></tr></table><hr><font size=4 color='#333355'><b>Percentile</b></font><br><br><table class="myTable"<tr><td><font size=1 color='black'>select percentile_cont(0.9) within group (order by active_visitor asc) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select percentile_cont(0.1) within group (order by active_visitor desc) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select percentile_cont(0.5) within group (order by core asc), percentile_cont(0.5) within group (order by db asc), percentile_cont(0.5) within group (order by active_visitor asc) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a><br></td></tr><tr><td><font size=1 color='black'>select core, percentile_cont(0.9999) within group (order by db asc) from <a href='#AGGREGATION_TABLE'>AGGREGATION_TABLE</a> group by CORE<br></td></tr></table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><hr><font size=4 color='#333355'><b>Salting</b></font><br><br><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"</table><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from <a href='#SALTED_TABLE'>SALTED_TABLE</a> where K1 in ('A', 'B', 'C', 'D')<br></td></tr><tr><td><font size=1 color='black'>select count(*) from <a href='#SALTED_TABLE'>SALTED_TABLE</a> where D < 1000<br></td></tr><tr><td><font size=1 color='black'>select avg(c),avg(d) from <a href='#SALTED_TABLE'>SALTED_TABLE</a> group by K1<br></td></tr></table><table class="myTable"</table><table class="myTable"</table><hr><font size=5 color='#333355'><b><br><br>Queries by Table</b></font><br><br><hr><font size=3 color='#335566'><h4 id='AGGREGATION_TABLE'><b>AGGREGATION_TABLE</b></h4></font><font size=1><br><font color=gray><i>Table used for various aggregation functions</i></font><br><br><b>ROWS</b> 2000000 [2M]<br><br><b>DDL</b> CREATE TABLE $TABLE (HOST CHAR(2) NOT NULL,DOMAIN VARCHAR NOT NULL,FEATURE VARCHAR NOT NULL,DATE DATE NOT NULL,USAGE.CORE BIGINT,USAGE.DB BIGINT,STATS.ACTIVE_VISITOR INTEGER CONSTRAINT PK PRIMARY KEY (HOST, DOMAIN, FEATURE, DATE)) SPLIT ON ('CSGoogle','CSSalesforce','EUApple','EUGoogle','EUSalesforce','NAApple','NAGoogle','NASalesforce')<br><br><b>DATA GENERATOR</b><br>STRING ::  Values: NA|CS|EU<br>STRING ::  Values: Salesforce.com|Apple.com|Google.com|Yelp.com<br>STRING ::  Values: Login|Report|Dashboard|Sales|UI<br>DATE ::  Values: SEQUENTIAL <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 2000 Values: RANDOM <br>INTEGER ::  Max. Value: 10000 Values: RANDOM <br><br></font><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select count(1) from AGGREGATION_TABLE group by HOST<br></td></tr><tr><td><font size=1 color='black'>select core, count(1) from AGGREGATION_TABLE group by CORE<br></td></tr><tr><td><font size=1 color='black'>select core, host, sum(ACTIVE_VISITOR) from AGGREGATION_TABLE group by core, host<br></td></tr><tr><td><font size=1 color='black'>select AVG(DB), MIN(CORE), MAX(ACTIVE_VISITOR) from AGGREGATION_TABLE where host='CS' and DOMAIN<>'Google.com'<br></td></tr><tr><td><font size=1 color='black'>select round(date, 'day',50), sum(core)+2 from AGGREGATION_TABLE where (CORE<10 or CORE>90) group by round(date, 'day',50), host<br></td></tr><tr><td><font size=1 color='black'>select trunc(date, 'hour', 1000), count(DB), count(ACTIVE_VISITOR) from AGGREGATION_TABLE where feature='Login' and (core<50 or db<20 or active_visitor > 200) group by trunc(date, 'hour', 1000)<br></td></tr><tr><td><font size=1 color='black'>select count(active_visitor) count from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select count(distinct active_visitor) count from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select percentile_cont(0.9) within group (order by active_visitor asc) from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select percentile_cont(0.1) within group (order by active_visitor desc) from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select count(core), count(db), count(active_visitor) from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select count(distinct core), count(distinct db), count(distinct active_visitor) from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select percentile_cont(0.5) within group (order by core asc), percentile_cont(0.5) within group (order by db asc), percentile_cont(0.5) within group (order by active_visitor asc) from AGGREGATION_TABLE<br></td></tr><tr><td><font size=1 color='black'>select core, count(db) count from AGGREGATION_TABLE group by CORE<br></td></tr><tr><td><font size=1 color='black'>select core, count(distinct db) count from AGGREGATION_TABLE group by CORE<br></td></tr><tr><td><font size=1 color='black'>select core, percentile_cont(0.9999) within group (order by db asc) from AGGREGATION_TABLE group by CORE<br></td></tr><tr><td><font size=1 color='black'>select count(core) from AGGREGATION_TABLE where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select count(core) from AGGREGATION_TABLE where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select count(core) from AGGREGATION_TABLE where core < 10 and active_visitor < 1000<br></td></tr><tr><td><font size=1 color='black'>select count(core) from AGGREGATION_TABLE where core > 90<br></td></tr><tr><td><font size=1 color='black'>LOAD DATA AGGREGATION_TABLE [2000000 ROWS]<br></td></tr></table><hr><font size=3 color='#335566'><h4 id='IN_LIKE_TABLE'><b>IN_LIKE_TABLE</b></h4></font><font size=1><br><font color=gray><i>Phoenix 1.2+ uses skip scan that gives significant performance improvement for IN/LIKE queries.</i></font><br><br><b>ROWS</b> 2000000 [2M]<br><br><b>DDL</b> CREATE TABLE IF NOT EXISTS $TABLE (K1 CHAR(1) NOT NULL, K2 VARCHAR NOT NULL, CF.A INTEGER, CF.B VARCHAR, CF.C VARCHAR CONSTRAINT PK PRIMARY KEY (K1,K2)) SPLIT ON ('B','C','D','E','F','G','H','I')<br><br><b>DATA GENERATOR</b><br>STRING ::  Values: A|B|C|D|E|F|G|H|I<br>STRING ::  Length: 10 Values: SEQUENTIAL <br>INTEGER ::  Max. Value: 1000000 Values: RANDOM <br>STRING ::  Length: 50 Values: RANDOM <br>STRING ::  Length: 50 Values: RANDOM <br><br></font><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from IN_LIKE_TABLE where K1 in ('Z', 'D', 'F', 'X')<br></td></tr><tr><td><font size=1 color='black'>select * from IN_LIKE_TABLE where K1 in ('A','B') and K2 in ('xxx1000000','xxx2000000','xxx2000001')<br></td></tr><tr><td><font size=1 color='black'>select * from IN_LIKE_TABLE where K1 in ('A', 'C', 'E', 'F', 'H') and K2 like 'xxxxxx1%'<br></td></tr><tr><td><font size=1 color='black'>select count(*) from IN_LIKE_TABLE where K1 in ('X','A','B','C','D','E','F','G','H','I','Z') and K2 like '%1%'<br></td></tr><tr><td><font size=1 color='black'>select count(*) from IN_LIKE_TABLE where (K1 in ('A','E','F','G','H','I','Z') or K1 like 'E%') and (K2 like '%xx1%' or K2 like '%xxxxxx2%')<br></td></tr><tr><td><font size=1 color='black'>LOAD DATA IN_LIKE_TABLE [2000000 ROWS]<br></td></tr></table><hr><font size=3 color='#335566'><h4 id='INDEXED_TABLE'><b>INDEXED_TABLE</b></h4></font><font size=1><br><font color=gray><i>Indexing test. Phoenix 2.0+ feature. See explain plan by hovering over version label to see which index table is used.</i></font><br><br><b>ROWS</b> 2000000 [2M]<br><br><b>DDL</b> CREATE TABLE $TABLE (HOST CHAR(2) NOT NULL,DOMAIN VARCHAR NOT NULL,FEATURE VARCHAR NOT NULL,DATE DATE NOT NULL,USAGE.CORE BIGINT,USAGE.DB BIGINT,STATS.ACTIVE_VISITOR INTEGER CONSTRAINT PK PRIMARY KEY (HOST, DOMAIN, FEATURE, DATE)) IMMUTABLE_ROWS=true,MAX_FILESIZE=30485760;CREATE INDEX idx1 ON $TABLE (CORE);CREATE INDEX idx2 ON $TABLE (DB);CREATE INDEX idx3 ON $TABLE (DB,ACTIVE_VISITOR);CREATE INDEX idx4 ON $TABLE (CORE,DB,ACTIVE_VISITOR);CREATE INDEX ids1 ON $TABLE (CORE) SALT_BUCKETS=16;CREATE INDEX ids2 ON $TABLE (DB) SALT_BUCKETS=16;CREATE INDEX ids3 ON $TABLE (DB,ACTIVE_VISITOR) SALT_BUCKETS=16;CREATE INDEX ids4 ON $TABLE (CORE,DB,ACTIVE_VISITOR) SALT_BUCKETS=16;<br><br><b>DATA GENERATOR</b><br>STRING ::  Values: NA|CS|EU<br>STRING ::  Values: Salesforce.com|Apple.com|Google.com|Yelp.com<br>STRING ::  Values: Login|Report|Dashboard|Sales|UI<br>DATE ::  Values: SEQUENTIAL <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 2000 Values: RANDOM <br>INTEGER ::  Max. Value: 10000 Values: RANDOM <br><br></font><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from INDEXED_TABLE<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  idx1 idx2 idx3 idx4) */ count(*) from INDEXED_TABLE<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  ids1 ids2 ids3 ids4) */ count(*) from INDEXED_TABLE<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(*) from INDEXED_TABLE<br></td></tr><tr><td><font size=1 color='black'>select round(date, 'day',50), sum(core)+2 from INDEXED_TABLE where (CORE<10 or CORE>90) group by round(date, 'day',50), host<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ round(date, 'day',50), sum(core)+2 from INDEXED_TABLE where (CORE<10 or CORE>90) group by round(date, 'day',50), host<br></td></tr><tr><td><font size=1 color='black'>select count(core) from INDEXED_TABLE where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  idx1 idx2 idx3 idx4) */ count(core) from INDEXED_TABLE where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  ids1 ids2 ids3 ids4) */ count(core) from INDEXED_TABLE where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from INDEXED_TABLE where core IN (1,100)<br></td></tr><tr><td><font size=1 color='black'>select count(core) from INDEXED_TABLE where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  idx1 idx2 idx3 idx4) */ count(core) from INDEXED_TABLE where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  ids1 ids2 ids3 ids4) */ count(core) from INDEXED_TABLE where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from INDEXED_TABLE where core IN (1,25,50,75,100)<br></td></tr><tr><td><font size=1 color='black'>select count(core) from INDEXED_TABLE where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  idx1 idx2 idx3 idx4) */ count(core) from INDEXED_TABLE where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select /*+ INDEX(INDEXED_TABLE  ids1 ids2 ids3 ids4) */ count(core) from INDEXED_TABLE where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from INDEXED_TABLE where core < 10 and db < 200<br></td></tr><tr><td><font size=1 color='black'>select count(core) from INDEXED_TABLE where core < 100 and db < 2000<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from INDEXED_TABLE where core < 100 and db < 2000<br></td></tr><tr><td><font size=1 color='black'>select count(core) from INDEXED_TABLE where core > 90<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from INDEXED_TABLE where core > 90<br></td></tr><tr><td><font size=1 color='black'>select count(core) from INDEXED_TABLE where core > 0<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ count(core) from INDEXED_TABLE where core > 0<br></td></tr><tr><td><font size=1 color='black'>select db from INDEXED_TABLE where db >5 and db <7 order by db<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ db from INDEXED_TABLE where db >5 and db <7 order by db<br></td></tr><tr><td><font size=1 color='black'>select db from INDEXED_TABLE order by db limit 10<br></td></tr><tr><td><font size=1 color='black'>select /*+NO_INDEX*/ db from INDEXED_TABLE order by db limit 10<br></td></tr><tr><td><font size=1 color='black'>CREATE INDEX idx5 ON INDEXED_TABLE (CORE) INCLUDE (DB,ACTIVE_VISITOR)<br></td></tr><tr><td><font size=1 color='black'>LOAD DATA INDEXED_TABLE [2000000 ROWS]<br></td></tr></table><hr><font size=3 color='#335566'><h4 id='TABLE_6CF'><b>TABLE_6CF</b></h4></font><font size=1><br><font color=gray><i>Data is split in 6 column families. Phoenix 1.2+ uses Essential Column Family filter feature which fetches only required columns when filtering rows.</i></font><br><br><b>ROWS</b> 2000000 [2M]<br><br><b>DDL</b> CREATE TABLE IF NOT EXISTS $TABLE (K1 CHAR(1) NOT NULL, K2 VARCHAR NOT NULL, CF1.A INTEGER, CF2.B INTEGER, CF3.C INTEGER, CF4.D INTEGER, CF5.E INTEGER, CF6.F INTEGER CONSTRAINT PK PRIMARY KEY (K1,K2)) SPLIT ON ('B','C','D');CREATE TABLE IF NOT EXISTS $TABLE_UPSERTSELECT (K1 CHAR(1) NOT NULL, K2 VARCHAR NOT NULL, CF1.A INTEGER, CF2.B INTEGER, CF3.C INTEGER, CF4.D INTEGER, CF5.E INTEGER, CF6.F INTEGER CONSTRAINT PK PRIMARY KEY (K1,K2)) SPLIT ON ('B','C','D')<br><br><b>DATA GENERATOR</b><br>STRING ::  Values: A|B|C|D<br>STRING ::  Length: 10 Values: SEQUENTIAL <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 1000 Values: RANDOM <br>INTEGER ::  Max. Value: 2000 Values: RANDOM <br>INTEGER ::  Max. Value: 5000 Values: RANDOM <br>INTEGER ::  Max. Value: 10000 Values: RANDOM <br>INTEGER ::  Max. Value: 15000 Values: RANDOM <br><br></font><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from TABLE_6CF where K1 in ('A', 'B', 'C', 'D')<br></td></tr><tr><td><font size=1 color='black'>select count(1) from TABLE_6CF where K1 in ('A', 'C')<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_6CF where f < 1000<br></td></tr><tr><td><font size=1 color='black'>select a,b,c,d,e,f from TABLE_6CF where B>1000 and B<2000 and f>1000 and f<2000<br></td></tr><tr><td><font size=1 color='black'>select sum(a),sum(b),sum(c),sum(d) from TABLE_6CF group by K1<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_6CF group by A<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_6CF group by B<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_6CF where f < 10000<br></td></tr><tr><td><font size=1 color='black'>LOAD DATA TABLE_6CF [2000000 ROWS]<br></td></tr></table><hr><font size=3 color='#335566'><h4 id='SALTED_TABLE'><b>SALTED_TABLE</b></h4></font><font size=1><br><font color=gray><i>This is Phoenix 1.2+ feature. Data is split in 4 regions equal to number of region servers in test cluster by adding salted byte to each key.</i></font><br><br><b>ROWS</b> 2000000 [2M]<br><br><b>DDL</b> CREATE TABLE $TABLE (K1 CHAR(1) NOT NULL, K2 VARCHAR NOT NULL, CFA.A VARCHAR, CFA.B CHAR(100), CFA.C INTEGER, CFB.D INTEGER CONSTRAINT PK PRIMARY KEY (K1,K2)) SALT_BUCKETS=4<br><br><b>DATA GENERATOR</b><br>STRING ::  Values: A|B|C|D<br>STRING ::  Length: 10 Values: SEQUENTIAL <br>STRING ::  Length: 100 Values: RANDOM <br>STRING ::  Length: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 1000000 Values: RANDOM <br>INTEGER ::  Max. Value: 1000000 Values: RANDOM <br><br></font><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from SALTED_TABLE where K1 in ('A', 'B', 'C', 'D')<br></td></tr><tr><td><font size=1 color='black'>select count(*) from SALTED_TABLE where D < 1000<br></td></tr><tr><td><font size=1 color='black'>select avg(c),avg(d) from SALTED_TABLE group by K1<br></td></tr><tr><td><font size=1 color='black'>LOAD DATA SALTED_TABLE [2000000 ROWS]<br></td></tr></table><hr><font size=3 color='#335566'><h4 id='TABLE_1CF'><b>TABLE_1CF</b></h4></font><font size=1><br><font color=gray><i>Same data as in 6 column family table but this one only has a single column family. Performance should be worse in most cases.</i></font><br><br><b>ROWS</b> 2000000 [2M]<br><br><b>DDL</b> CREATE TABLE IF NOT EXISTS $TABLE (K1 CHAR(1) NOT NULL, K2 VARCHAR NOT NULL, CF.A INTEGER, CF.B INTEGER, CF.C INTEGER, CF.D INTEGER, CF.E INTEGER, CF.F INTEGER CONSTRAINT PK PRIMARY KEY (K1,K2)) SPLIT ON ('B','C','D');CREATE TABLE IF NOT EXISTS $TABLE_UPSERTSELECT (K1 CHAR(1) NOT NULL, K2 VARCHAR NOT NULL, CF.A INTEGER, CF.B INTEGER, CF.C INTEGER, CF.D INTEGER, CF.E INTEGER, CF.F INTEGER CONSTRAINT PK PRIMARY KEY (K1,K2)) SPLIT ON ('B','C','D')<br><br><b>DATA GENERATOR</b><br>STRING ::  Values: A|B|C|D<br>STRING ::  Length: 10 Values: SEQUENTIAL <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 1000 Values: RANDOM <br>INTEGER ::  Max. Value: 2000 Values: RANDOM <br>INTEGER ::  Max. Value: 5000 Values: RANDOM <br>INTEGER ::  Max. Value: 10000 Values: RANDOM <br>INTEGER ::  Max. Value: 15000 Values: RANDOM <br><br></font><table class="myTable"<tr><td><font size=1 color='black'>select count(1) from TABLE_1CF where K1 in ('A', 'B', 'C', 'D')<br></td></tr><tr><td><font size=1 color='black'>select count(1) from TABLE_1CF where K1 in ('A', 'C')<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_1CF where f < 1000<br></td></tr><tr><td><font size=1 color='black'>select a,b,c,d,e,f from TABLE_1CF where B>1000 and B<2000 and f>1000 and f<2000<br></td></tr><tr><td><font size=1 color='black'>select sum(a),sum(b),sum(c),sum(d) from TABLE_1CF group by K1<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_1CF group by A<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_1CF group by B<br></td></tr><tr><td><font size=1 color='black'>select count(*) from TABLE_1CF where f < 10000<br></td></tr><tr><td><font size=1 color='black'>LOAD DATA TABLE_1CF [2000000 ROWS]<br></td></tr></table><hr><font size=3 color='#335566'><h4 id='WIDE_PK'><b>WIDE_PK</b></h4></font><font size=1><br><font color=gray><i></i></font><br><br><b>ROWS</b> 2000000 [2M]<br><br><b>DDL</b> CREATE TABLE IF NOT EXISTS $TABLE (mypk CHAR(500) NOT NULL PRIMARY KEY,CF.column1 INTEGER,CF.column2 INTEGER,CF.column3 INTEGER,CF.column4 INTEGER,CF.column5 INTEGER) SALT_BUCKETS=4;<br><br><b>DATA GENERATOR</b><br>STRING ::  Length: 500 Values: SEQUENTIAL <br>INTEGER ::  Values: SEQUENTIAL <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br>INTEGER ::  Max. Value: 100 Values: RANDOM <br><br></font><table class="myTable"<tr><td><font size=1 color='black'>select count(*) from WIDE_PK<br></td></tr><tr><td><font size=1 color='black'>select count(*) from WIDE_PK where column2<10<br></td></tr><tr><td><font size=1 color='black'>select count(*) from WIDE_PK where column2<50 and column3<50 and column4<50 and column5<50<br></td></tr><tr><td><font size=1 color='black'>LOAD DATA WIDE_PK [2000000 ROWS]<br></td></tr></table><br><hr><font size=1>Note: Hover over version label to see <i>Phoenix Query Explain Plan</i>.</font></html>